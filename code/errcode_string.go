// Code generated by "stringer -linecomment -type ErrCode"; DO NOT EDIT.

package code

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Success-200]
	_ = x[NoErrCode-0]
	_ = x[ErrCodeOfflineReasonHandlerPanic-100]
	_ = x[ErrCodeServerClosePushMsgNo-101]
	_ = x[ErrCodeAlreadyLogin-102]
	_ = x[EErrCodeRepeatedLogin-103]
	_ = x[ErrCodeFileNotExist-404]
	_ = x[ErrCodeInvalidParams-500]
	_ = x[ErrCodeJwtTokenErr-501]
	_ = x[ErrCodeConnRefuse-503]
	_ = x[ErrCodeNetAbnormal-504]
	_ = x[ErrCodeTimeOut-505]
	_ = x[ErrCodeRedisWriteErr-506]
	_ = x[ErrCodeJwtTokenIsExpired-600]
	_ = x[ErrCodeJwtTokenNotActiveYet-601]
	_ = x[ErrCodeJwtNotEvenAToken-602]
	_ = x[ErrCodeJwtTokenNotInvalid-603]
	_ = x[ErrCodeAuthorizationRefreshErr-604]
	_ = x[ErrCodeJwtGenerateErr-605]
	_ = x[ErrCodeCasbinNotActiveYet-800]
	_ = x[ErrCodeCasbinNotPermissions-801]
	_ = x[ErrCodeDeleteCasbinGlobalErr-802]
	_ = x[ErrCodeGenerateUUidErr-1000]
	_ = x[ErrCodeGenerateAccountErr-1001]
	_ = x[ErrCodeUuidGetDBErr-1002]
	_ = x[ErrCodeAccountNotExist-1003]
	_ = x[ErrCodeUserNameExist-1004]
	_ = x[ErrCodePasswordErr-1005]
	_ = x[ErrCodeNotBanSelf-1006]
	_ = x[ErrCodeRoleBan-1007]
	_ = x[ErrCodeSmsCodeInvalid-1008]
	_ = x[ErrCodeRoleNotExist-1009]
	_ = x[ErrCodeRolePermissionErr-1010]
	_ = x[ErrCodeCasbinIdenticalAdditionFailed-1011]
	_ = x[ErrCodeNotFoundAESKey-1200]
	_ = x[ErrCodeAESDecodingError-1201]
	_ = x[ErrCodeNotFoundMenusGlobal-1300]
	_ = x[ErrCodeNotGetAllMenusGlobal-1301]
	_ = x[ErrCodeDeleteMenusGlobal-1302]
	_ = x[ErrCodeNotFoundUserShare-1400]
	_ = x[ErrCodeCreateUserShare-1401]
	_ = x[ErrCodeDeleteUserShare-1402]
	_ = x[ErrCodePersistUserShare-1403]
	_ = x[ErrCodeNotFoundAccountGlobal-1500]
	_ = x[ErrCodeNotFountRoleGlobal-1600]
	_ = x[ErrCodeRoleCodeExist-1601]
	_ = x[ErrCodeNotFoundRoleGlobals-1602]
	_ = x[ErrCodeDeleteRoleGlobalErr-1603]
	_ = x[ErrCodeNotFoundApisGlobals-1700]
	_ = x[ErrCodeApiPathExist-1701]
	_ = x[ErrCodeDeleteApisErr-1702]
	_ = x[ErrCodeNotFoundRoleAuthGlobal-1800]
	_ = x[ErrCodeNotFoundRoleApiGlobal-1801]
	_ = x[ErrCodeDeleteRoleApiGlobal-1802]
	_ = x[ErrCodeDeleteRoleAuthGlobal-1803]
	_ = x[ErrCodeNotFoundRecordsGlobals-1900]
	_ = x[ErrCodeDeleteRecordsGlobals-1901]
	_ = x[ErrCodeNotFoundDictTypeGlobal-2000]
	_ = x[ErrCodeDictTypeGlobalExitErr-2001]
	_ = x[ErrCodeDictTypeGlobalDeleteErr-2002]
	_ = x[ErrCodeDictDataGlobalDeleteErr-2002]
	_ = x[ErrCodeDictInvalidParams-2003]
	_ = x[ErrCodeNotFoundDictDataGlobal-2004]
	_ = x[ErrCodeAssetGlobalExist-2100]
	_ = x[ErrCodeAssetGlobalNotExist-2101]
	_ = x[ErrCodeNotFoundGpuMonitor-2200]
	_ = x[ErrCodeGpuMonitorMarshal-2201]
	_ = x[ErrCodeDBSyncErr-9000]
}

const _ErrCode_name = "无错误码离线处理异常离线处理没有消息推送已经登录已经登录成功资源不存在请求参数错误token错误连接被拒绝网络异常请求超时Redis写入错误jwt的token过期jwt的没有启用没有携带jwt的tokenjwt的token不正确jwt的token刷新错误jwt生成失败casbin没有启用casbin没有权限casbin删除全局权限失败生成uuid错误生成账户失败从数据库获取uuid错误账户不存在账户名已存在密码错误不能禁用自己账户被禁用短信验证码错误角色不存在角色权限不够casbin没找到相同api没找到aes密钥aes解码错误没找路由表没有导出路由删除路由失败没找到用户表生成用户表失败删除用户表失败持久化用户表失败没找到账户表没找到角色表角色编码已存在没找到角色表删除角色表失败没找到接口表接口路径已存在删除接口表错误没找到角色权限表没找到角色接口表删除角色接口表错误删除角色权限表错误没找到记录表删除记录表错误没找到字典类型表字典类型编码已存在字典类型删除失败请求获取字典参数错误没找到字典数据表资产名称已存在资产不存在没找到gpu监控表gpu监控表序列化错误数据库同步错误"

var _ErrCode_map = map[ErrCode]string{
	0:    _ErrCode_name[0:12],
	100:  _ErrCode_name[12:30],
	101:  _ErrCode_name[30:60],
	102:  _ErrCode_name[60:72],
	103:  _ErrCode_name[72:84],
	200:  _ErrCode_name[84:90],
	404:  _ErrCode_name[90:105],
	500:  _ErrCode_name[105:123],
	501:  _ErrCode_name[123:134],
	503:  _ErrCode_name[134:149],
	504:  _ErrCode_name[149:161],
	505:  _ErrCode_name[161:173],
	506:  _ErrCode_name[173:190],
	600:  _ErrCode_name[190:207],
	601:  _ErrCode_name[207:225],
	602:  _ErrCode_name[225:248],
	603:  _ErrCode_name[248:268],
	604:  _ErrCode_name[268:291],
	605:  _ErrCode_name[291:306],
	800:  _ErrCode_name[306:324],
	801:  _ErrCode_name[324:342],
	802:  _ErrCode_name[342:372],
	1000: _ErrCode_name[372:388],
	1001: _ErrCode_name[388:406],
	1002: _ErrCode_name[406:434],
	1003: _ErrCode_name[434:449],
	1004: _ErrCode_name[449:467],
	1005: _ErrCode_name[467:479],
	1006: _ErrCode_name[479:497],
	1007: _ErrCode_name[497:512],
	1008: _ErrCode_name[512:533],
	1009: _ErrCode_name[533:548],
	1010: _ErrCode_name[548:566],
	1011: _ErrCode_name[566:590],
	1200: _ErrCode_name[590:608],
	1201: _ErrCode_name[608:623],
	1300: _ErrCode_name[623:638],
	1301: _ErrCode_name[638:656],
	1302: _ErrCode_name[656:674],
	1400: _ErrCode_name[674:692],
	1401: _ErrCode_name[692:713],
	1402: _ErrCode_name[713:734],
	1403: _ErrCode_name[734:758],
	1500: _ErrCode_name[758:776],
	1600: _ErrCode_name[776:794],
	1601: _ErrCode_name[794:815],
	1602: _ErrCode_name[815:833],
	1603: _ErrCode_name[833:854],
	1700: _ErrCode_name[854:872],
	1701: _ErrCode_name[872:893],
	1702: _ErrCode_name[893:914],
	1800: _ErrCode_name[914:938],
	1801: _ErrCode_name[938:962],
	1802: _ErrCode_name[962:989],
	1803: _ErrCode_name[989:1016],
	1900: _ErrCode_name[1016:1034],
	1901: _ErrCode_name[1034:1055],
	2000: _ErrCode_name[1055:1079],
	2001: _ErrCode_name[1079:1106],
	2002: _ErrCode_name[1106:1130],
	2003: _ErrCode_name[1130:1160],
	2004: _ErrCode_name[1160:1184],
	2100: _ErrCode_name[1184:1205],
	2101: _ErrCode_name[1205:1220],
	2200: _ErrCode_name[1220:1241],
	2201: _ErrCode_name[1241:1268],
	9000: _ErrCode_name[1268:1289],
}

func (i ErrCode) String() string {
	if str, ok := _ErrCode_map[i]; ok {
		return str
	}
	return "ErrCode(" + strconv.FormatInt(int64(i), 10) + ")"
}
